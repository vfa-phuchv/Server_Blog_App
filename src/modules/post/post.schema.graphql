type Post {
  postId: Int
  caption: String
  content: String
  subTitle: String
  imageUrl: String
  reactionCount: Int
  shareCount: Int
  commnentCount: Int
  isApproved: Boolean
  datePublished: Date
  visibility: Boolean
  createdAt: Date
  updatedAt: Date
}

input createPostDto {
  caption: String
  subTitle: String
  content: String
  imageFile: String
  visibility: Boolean
}

input updatePostDto {
  caption: String
  subTitle: String
  content: String
  imageFile: String
  visibility: Boolean
}

type Query {
  getPost(postId: Int!): Post!
  getPostOfUser: [Post!]!
  getAllPost(page: Int!, perPage: Int!): [Post!]!
  getPostPending: [Post!]!
}

type Mutation {
  createPost(createPostInput: createPostDto!): Post!
  updatePost(updatePostInput: updatePostDto!, postId: Int!): Post!
  deletePost(postId: Int!): Int
  approvePost(postId: Int!): String
}
